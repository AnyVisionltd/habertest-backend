apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudvisor.fullname" . }}
  labels:
{{ include "cloudvisor.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cloudvisor.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cloudvisor.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "cloudvisor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{.Values.image.registry}}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
          - configMapRef:
              name: {{ include "cloudvisor.fullname" . }}
          {{ if .Values.aws.config.secretName }} 
          volumeMounts:
          - mountPath: "/root/.aws"
              name: aws-config
              readOnly: true
          - mountPath: "/root/anyvision-devops.pem"
              name: ssh-key
              readOnly: true
              subPath: anyvision-devops.pem
          {{ end }} 
      volumes:
      {{ if .Values.aws.config.secretName }}
        - name: aws-config
          secret:
            secretName: {{ .Values.aws.config.secretName }}
      {{ end }}
      {{ if .Values.instance.ssh.secretName }}
        - name: ssh-key
          secret:
            secretName: {{ .Values.instance.ssh.secretName }} 
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
